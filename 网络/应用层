应用层的协议有：HTTP、DNS、POP3、Telnet、ping

DNS(域名解析)
作用：将域名解析为IP地址。为什么是IP地址呢？因为IP地址长度固定。
域名系统DNS为分布式数据库系统。大多数都在本地进行解析，仅少量解析需要互联网上通信。通信基于UDP协议
域名结构：层次树状结构。每一个域名都由标号序列组成，各标号由点隔开，由右向左分别是顶级域名，其次是二级域名、三级域名
        规定标号由数字、字母和“—”组成，不超过63个字符，不区分大小写.由多个标号组成的完整域名不超过255个字符
        顶级域名三大类：国家顶级域名（cn、us、uk）;通用顶级域名（例如：com、net、org）;基础结构域名（只有arpa,用于反向域名解析，又称为反向域名）
        我过二级域名分为类别域名（com、edu、gov、net、org）和行政区域名(bj、js)两大类
域名服务器
  一个服务器所负责管辖的范围叫做区，每个区设置相应的权限域名服务器，用来保存该区中所有主机的域名到IP地址的映射。
  根据域名服务器所起的作用，把域名服务器划分为以下四种不同的类型：
    1.根域名服务器
        最高层次的域名服务器，也就是最重要的域名服务器，因为如果每个本地域名服务器无法解析一个域名，首先求助于根域名服务器。
        所有的根域名服务器都知道所有的顶级域名服务器的域名和IP地址。
      到2016年2月，全世界已经在588个地点安装了根域名服务器，但这个多的根域名服务器只有13个不同的IP地址的域名，即a.rootservers.net,b.rootservers.net.....m.rootservers.net。
      13个域名并不代表13台机器，而是13套装置构成这13组根域名服务器。每一套装置在很多地点安装根域名服务器，但都使用同一个域名。负责运营根域名服务器的公司大多在美国，但所有的根域名服务器却分布
      在全世界。目前，根域名服务器分布仍然是不均衡的。
        由于根域名服务器采用了任播技术（任播的IP数据包的终点是一组在不同地点的主机，但具有相同的IP地址。IP数据报交付离源点最近的一台主机），因此当DNS客户向某个根域名服务器发送查询报文时，
      路由器就能找到离这个DNS客户最近的一个根域名服务器。
        需要注意的是，在许多情况下，根域名服务器并不直接把待查询的域名转换为IP地址（根域名服务器也没有存放这种信息），而是告诉本地域名服务器下一步应当找哪个顶级域名服务器进行查询。
    2.顶级域名服务器
      负责管理在该顶级域名服务器注册的所有二级域名。当收到DNS查询请求时，就给出相应的回答。
    3.权限域名服务器
      负责一个区的域名服务器，当一个权限域名服务器找不到相应的数据时，会告诉请求的客户，下一步应当找哪一个权限域名服务器。
    4.本地域名服务器
      当一台主机发出DNS查询时，这个查询首先发送给本地域名服务器。可以在网络偏好设置->高级->DNS查看首选DNS服务器和备用DNS服务器的IP地址。
   域名解析过程：
   1.主机向本地域名服务器的查询一般都是采用递归查询。所谓递归查询就是，如果主机所询问的本地域名服务器不知道被查询域名的IP地址，那个本地域名服务器就以DNS客户的身份，向其他根域名服务器继续发出
    查询请求报文，而不是该主机自己进行下一步查询。因此，递归查询返回的查询结果为IP地址或报错（表示无法查询到）。
   2.本地域名服务器向根域名服务器查询通常是迭代查询。迭代查询的特点是，当根域名服务器收到本地域名服务器发出的迭代请求报文时，要么给出IP地址，要么告诉本地域名服务器：你下一步应当向哪个域名服务器
   查询。然后让本地域名服务器进行后续的查询。根域名服务器通常把自己知道的顶级域名服务器的IP地址告诉本地域名服务器，让本地域名服务器向顶级域名服务器查询。顶级域名服务器在收到请求时，要么给出IP地址，
   要么告知下一步应当向哪一个权限域名服务器进行查询，本地域名服务器就这样进行迭代查询。当然，本地域名服务器也可以采用递归查询，这取决于最初的查询请求报文的设置是要求哪一种查询方式。
 为了提高DNS查询效率，在域名服务器广泛使用了高速缓存。
 
 
 HTTP(超文本传输协议)
  
  万维网大致工作如下：
    每个万维网网点都有个服务器进程，它不断监听TCP的80端口，以便发现是否有浏览器向它发出连接建立请求。一旦监听到连接建立请求并建立了TCP连接后，浏览器向服务器发出浏览某个页面的请求，服务器就返回
  所请求的页面作为响应。最后，TCP连接被释放了。在浏览器和服务器之间的请求和响应的交互，必须按照规定的格式和遵循一定的规则。这些格式和规则就是超文本传输协议HTTP。
  HTTP使用了面向连接的TCP作为传输协议，保证了数据的可靠传输。但HTTP协议本身是无连接的。
  HTTP协议是无状态的。也就是说，同一个客户第二次访问同一个服务器上的页面时，服务器的响应与第一次被访问时的相同，因为服务器并不记得曾经访问过这个客户，也不记得为该客户曾经服务过多少次。HTTP的
  无状态特性简化了服务器的设计，使服务器更容易支持大量并发的HTTP请求。
  HTTP/1.1协议使用了持续连接。所谓持续连接就是万维网服务器在发送响应后仍然在一段时间内保持这条连接，使同一个客户和该服务器可以继续在这条连接上传送后续的HTTP请求报文和响应报文。
  
  代理服务器
    代理服务器是一种网络实体，它又称为万维网的高速缓存。代理服务器把最近的一些请求和响应缓存在本地磁盘中。当新请求到达时，若代理服务器发现这个请求与暂时存放的请求相同，就返回暂存的响应。代理服务器
  可在客户端或服务端工作，也可在中间系统上工作。代理服务器有时是作为服务器（当接受浏览器的HTTP请求时），但有时却作为客户（当向互联网上的源点服务器发送HTTP请求时）。
  
  HTTP的报文结构
  分为请求报文和响应报文
  请求报文例子如下：
  POST /generate_204?name=value HTTP/1.1
  Host: www.gstatic.com
  Pragma: no-cache
  Cache-Control: no-cache
  User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.80 Safari/537.36
  Accept-Encoding: gzip, deflate
  Accept-Language: en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7
  Content-Type: application/x-www-form-urlencoded
  Content-Length: 13

  body
  响应报文例子如下
  HTTP/1.1 204 No Content
  Content-Length: 0
  Date: Sat, 07 Nov 2020 13:00:34 GMT
  Proxy-Connection: Close
  
  body
  由上面例子可以看出：HTTP请求报文和响应报文都是由三部分组成，两种报文格式的区别就是开始行不同：
  1.开始行，用于区分请求报文和响应报文。请求行由“方法 URL HTTP版本CRLF”构成；响应行由“HTTP版本 状态码 短语CRLF”构成。其中“CR”和“LF”分别代表“回车”和“换行”。
  2.首部行，用来说明浏览器、服务器或报文主体的一些信息。首部可以有好几行，每一行由“首部字段名: 值CRLF”构成，整个首部行结束时，还有一空行将首部行和后面的实体主体分开。
  3.实体主体。可有可无。
  
  
 
 
